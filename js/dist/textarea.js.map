{"version":3,"sources":["../src/textarea.js"],"names":["Textarea","element","inputNode","querySelector","counterNode","counterValueNode","maxLimit","getAttribute","_toggleInvalidClass","value","length","innerHTML","addEventListener","event","target","currentValueLength","classList","add","remove"],"mappings":"AAAA;;;;;IAMMA,Q;;;AACJ,oBAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACA,QAAMC,YAAYD,QAAQE,aAAR,CAAsB,mBAAtB,CAAlB;AACA,QAAMC,cAAcH,QAAQE,aAAR,CAAsB,qBAAtB,CAApB;;AAEA,QAAIC,WAAJ,EAAiB;AACf,UAAMC,mBAAmBJ,QAAQE,aAAR,CAAsB,2BAAtB,CAAzB;AACA,UAAMG,WAAWF,YAAYG,YAAZ,CAAyB,YAAzB,CAAjB;;AAEA,WAAKC,mBAAL,CAAyBN,UAAUO,KAAV,CAAgBC,MAAzC,EAAiDJ,QAAjD;;AACAD,uBAAiBM,SAAjB,GAA6BT,UAAUO,KAAV,CAAgBC,MAA7C;AAEAR,gBAAUU,gBAAV,CAA2B,OAA3B,EAAoC,UAACC,KAAD,EAAW;AAC7C,cAAKL,mBAAL,CAAyBK,MAAMC,MAAN,CAAaL,KAAb,CAAmBC,MAA5C,EAAoDJ,QAApD;;AACAD,yBAAiBM,SAAjB,GAA6BE,MAAMC,MAAN,CAAaL,KAAb,CAAmBC,MAAhD;AACD,OAHD;AAID;AACF;;;;SAEDF,mB,gCAAoBO,kB,EAAoBT,Q,EAAU;AAChD,QAAIS,qBAAqBT,QAAzB,EAAmC;AACjC,WAAKL,OAAL,CAAae,SAAb,CAAuBC,GAAvB,CAA2B,SAA3B;AACD,KAFD,MAEO;AACL,WAAKhB,OAAL,CAAae,SAAb,CAAuBE,MAAvB,CAA8B,SAA9B;AACD;AACF,G","file":"textarea.js","sourcesContent":["/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Textarea {\n  constructor(element) {\n    this.element = element\n    const inputNode = element.querySelector('[data-role=input]')\n    const counterNode = element.querySelector('[data-role=counter]')\n\n    if (counterNode) {\n      const counterValueNode = element.querySelector('[data-role=counter-value]')\n      const maxLimit = counterNode.getAttribute('data-limit')\n\n      this._toggleInvalidClass(inputNode.value.length, maxLimit)\n      counterValueNode.innerHTML = inputNode.value.length\n\n      inputNode.addEventListener('input', (event) => {\n        this._toggleInvalidClass(event.target.value.length, maxLimit)\n        counterValueNode.innerHTML = event.target.value.length\n      })\n    }\n  }\n\n  _toggleInvalidClass(currentValueLength, maxLimit) {\n    if (currentValueLength > maxLimit) {\n      this.element.classList.add('invalid')\n    } else {\n      this.element.classList.remove('invalid')\n    }\n  }\n}\n\nexport default Textarea"]}